["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "],"~$goog",["^ ","~$string",["^ ","~$StringBuffer",["^ ","~$prototype",["^ ","~$append",["^ "]]]]]],"~:use-macros",["^ "],"~:excludes",["~#set",["~$cat","~$*","~$or","~$merge","~$keys","~$+","~$and","~$def"]],"~:name","~$cljs.spec.alpha","~:imports",null,"~:requires",["^ ","~$cljs.core","^F","~$gobj","~$goog.object","^H","^H","~$walk","~$clojure.walk","~$gen","~$cljs.spec.gen.alpha","~$c","^F","~$str","~$clojure.string","^N","^N","^J","^J","^L","^L"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$form",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","~:line",162,"~:column",7,"~:end-line",162,"~:end-column",11,"~:arglists",["~#list",["~$quote",["^[",[["~$spec"]]]]],"~:doc","returns the spec as data"],"^B","~$cljs.spec.alpha/form","~:variadic",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",11,"~:method-params",["^[",[["^11"]]],"~:protocol-impl",null,"~:arglists-meta",["^[",[null,null]],"^W",1,"^V",162,"^X",162,"~:max-fixed-arity",1,"~:fn-var",true,"^Z",["^[",["^10",["^[",[["^11"]]]]],"^12","returns the spec as data"],"~$t_cljs$spec$alpha48919",["^ ","~:num-fields",25,"~:protocols",["^;",["~$cljs.spec.alpha/Spec","~$cljs.core/IMeta","~$cljs.spec.alpha/Specize","~$cljs.core/IWithMeta"]],"^B","~$cljs.spec.alpha/t_cljs$spec$alpha48919","^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","~:type",true,"~:anonymous",true,"^W",6,"^V",833,"~:record",false,"~:skip-protocol-flag",["^;",["^1>","^1@"]]],"~$->t_cljs$spec$alpha48811",["^ ","^S",null,"^T",["^ ","^1C",true,"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^1E",["^;",["^1>","^1@"]],"~:factory","~:positional","^Z",["^[",["^10",["^[",[["^R","~$mmvar","~$retag","~$gfn","~$id","~$predx","~$dval","~$tag","~$meta48812"]]]]],"^U",null],"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^B","~$cljs.spec.alpha/->t_cljs$spec$alpha48811","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^15",["^[",[["^R","^1I","^1J","^1K","^1L","^1M","^1N","^1O","^1P"]]],"^16",null,"^17",["^[",[null,null]],"^1C",true,"^W",6,"^1G","^1H","^V",507,"^18",9,"^19",true,"^Z",["^[",["^10",["^[",[["^R","^1I","^1J","^1K","^1L","^1M","^1N","^1O","^1P"]]]]],"^1E",["^;",["^1>","^1@"]]],"~$nilable-impl",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",1360,"^W",19,"^X",1360,"^Y",31,"~:skip-wiki",true,"^Z",["^[",["^10",["^[",[["^R","~$pred","^1K"]]]]],"^12","Do not call this directly, use 'nilable'"],"^B","~$cljs.spec.alpha/nilable-impl","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",31,"^15",["^[",[["^R","^1T","^1K"]]],"^16",null,"^1S",true,"^17",["^[",[null,null]],"^W",1,"^V",1360,"^X",1360,"^18",3,"^19",true,"^Z",["^[",["^10",["^[",[["^R","^1T","^1K"]]]]],"^12","Do not call this directly, use 'nilable'"],"~$*recursion-limit*",["^ ","^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",21,"^W",16,"^X",21,"^Y",33,"~:dynamic",true],"^B","~$cljs.spec.alpha/*recursion-limit*","^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",33,"^W",1,"^1W",true,"^V",21,"^X",21,"~:tag","~$number","^12","A soft limit on how many times a branching spec (or/alt/*/opt-keys/multi-spec)\n  can be recursed through during generation. After this a\n  non-recursive branch will be chosen."],"~$*coll-error-limit*",["^ ","^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",35,"^W",16,"^X",35,"^Y",34,"^1W",true],"^B","~$cljs.spec.alpha/*coll-error-limit*","^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",34,"^W",1,"^1W",true,"^V",35,"^X",35,"^1Y","^1Z","^12","The number of errors reported by explain in a collection spec'ed with 'every'"],"~$explain-printer",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",216,"^W",7,"^X",216,"^Y",22,"^Z",["^[",["^10",["^[",[["~$ed"]]]]],"^12","Default printer for explain-data. nil indicates a successful validation."],"^B","~$cljs.spec.alpha/explain-printer","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",22,"^15",["^[",[["^22"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",216,"^X",216,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["^22"]]]]],"^12","Default printer for explain-data. nil indicates a successful validation."],"~$op-explain",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",1112,"^W",8,"^X",1112,"^Y",18,"~:private",true,"^Z",["^[",["^10",["^[",[["^R","~$p","~$path","~$via","~$in","~$input"]]]]]],"^25",true,"^B","~$cljs.spec.alpha/op-explain","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",18,"^15",["^[",[["^R","~$p","^26","^27","^28","^29"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",1112,"^X",1112,"^18",6,"^19",true,"^Z",["^[",["^10",["^[",[["^R","~$p","^26","^27","^28","^29"]]]]]],"~$Specize",["^ ","^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",123,"^W",14,"^X",123,"^Y",21,"^12",null,"~:protocol-symbol",true,"~:jsdoc",["^[",["@interface"]],"~:protocol-info",["^ ","~:methods",["^ ","~$specize*",[["~$_"],["~$_","^R"]]]]],"^2<",true,"^B","^1?","^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",21,"^W",1,"^V",123,"^2>",["^ ","^2?",["^ ","^2@",[["~$_"],["~$_","^R"]]]],"~:info",null,"^X",123,"^1Y","~$any","~:impls",["^;",["~$cljs.spec.alpha/t_cljs$spec$alpha48751","~$cljs.spec.alpha/t_cljs$spec$alpha48893","~$cljs.spec.alpha/t_cljs$spec$alpha49117","~$cljs.spec.alpha/t_cljs$spec$alpha49100","~$cljs.core/Keyword","^1A","~$cljs.spec.alpha/t_cljs$spec$alpha48811","~$default","~$cljs.spec.alpha/t_cljs$spec$alpha49093","~$cljs.spec.alpha/t_cljs$spec$alpha48800","~$cljs.spec.alpha/t_cljs$spec$alpha48825","~$cljs.spec.alpha/t_cljs$spec$alpha49120","~$cljs.core/Symbol","~$cljs.spec.alpha/t_cljs$spec$alpha48835","~$cljs.spec.alpha/t_cljs$spec$alpha48907"]],"^12",null,"^2=",["^[",["@interface"]]],"~$alt-impl",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",996,"^W",19,"^X",996,"^Y",27,"^1S",true,"^Z",["^[",["^10",["^[",[["~$ks","~$ps","~$forms"]]]]],"^12","Do not call this directly, use 'alt'"],"^B","~$cljs.spec.alpha/alt-impl","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",27,"^15",["^[",[["^2S","^2T","^2U"]]],"^16",null,"^1S",true,"^17",["^[",[null,null]],"^W",1,"^V",996,"^X",996,"^18",3,"^19",true,"^Z",["^[",["^10",["^[",[["^2S","^2T","^2U"]]]]],"^12","Do not call this directly, use 'alt'"],"~$tagged-ret",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",607,"^W",8,"^X",607,"^Y",18,"^25",true,"^Z",["^[",["^10",["^[",[["~$v"]]]]]],"^25",true,"^B","~$cljs.spec.alpha/tagged-ret","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",18,"^15",["^[",[["~$v"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",607,"^X",607,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["~$v"]]]]]],"~$t_cljs$spec$alpha48907",["^ ","^1;",4,"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^B","^2Q","^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^1B",true,"^1C",true,"^W",3,"^V",770,"^1D",false,"^1E",["^;",["^1>","^1@"]]],"~$pvalid?",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",365,"^W",8,"^X",365,"^Y",15,"^25",true,"^Z",["^[",["^10",["^[",[["^1T","~$x"],["^1T","~$x","^R"]]]]],"^12","internal helper function that returns true when x is valid for spec.","~:top-fn",["^ ","^14",false,"^18",3,"^15",["^[",[["^1T","~$x"],["^1T","~$x","^R"]]],"^Z",["^[",[["^1T","~$x"],["^1T","~$x","^R"]]],"^17",["^[",[null,null]]]],"^25",true,"^B","~$cljs.spec.alpha/pvalid?","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",15,"^2[",["^ ","^14",false,"^18",3,"^15",["^[",[["^1T","~$x"],["^1T","~$x","^R"]]],"^Z",["^[",[["^1T","~$x"],["^1T","~$x","^R"]]],"^17",["^[",[null,null]]],"^15",["^[",[["^1T","~$x"],["^1T","~$x","^R"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",365,"^X",365,"^18",3,"^19",true,"^Z",["^[",[["^1T","~$x"],["^1T","~$x","^R"]]],"^12","internal helper function that returns true when x is valid for spec."],"~$def-impl",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",293,"^W",19,"^X",293,"^Y",27,"^1S",true,"^Z",["^[",["^10",["^[",[["~$k","^R","^11"]]]]],"^12","Do not call this directly, use 'def'"],"^B","~$cljs.spec.alpha/def-impl","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",27,"^15",["^[",[["~$k","^R","^11"]]],"^16",null,"^1S",true,"^17",["^[",[null,null]],"^W",1,"^V",293,"^X",293,"^18",3,"^19",true,"^Z",["^[",["^10",["^[",[["~$k","^R","^11"]]]]],"^12","Do not call this directly, use 'def'"],"~$*explain-out*",["^ ","^B","~$cljs.spec.alpha/*explain-out*","^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^V",249,"^W",1,"^X",249,"^Y",29,"^1W",true,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",249,"^W",16,"^X",249,"^Y",29,"^1W",true]],"~$*runtime-asserts*",["^ ","^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",1432,"^W",3,"^X",1432,"^Y",20,"^25",true,"^1W",true],"^25",true,"^B","~$cljs.spec.alpha/*runtime-asserts*","^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",20,"^W",1,"^1W",true,"^V",1430,"^X",1432,"^1Y","~$boolean"],"~$regex-spec-impl",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",1244,"^W",19,"^X",1244,"^Y",34,"^1S",true,"^Z",["^[",["^10",["^[",[["~$re","^1K"]]]]],"^12","Do not call this directly, use 'spec' with a regex op argument"],"^B","~$cljs.spec.alpha/regex-spec-impl","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",34,"^15",["^[",[["^39","^1K"]]],"^16",null,"^1S",true,"^17",["^[",[null,null]],"^W",1,"^V",1244,"^X",1244,"^18",2,"^19",true,"^Z",["^[",["^10",["^[",[["^39","^1K"]]]]],"^12","Do not call this directly, use 'spec' with a regex op argument"],"~$merge-spec-impl",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",767,"^W",19,"^X",767,"^Y",34,"^1S",true,"^Z",["^[",["^10",["^[",[["^2U","~$preds","^1K"]]]]],"^12","Do not call this directly, use 'merge'"],"^B","~$cljs.spec.alpha/merge-spec-impl","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",34,"^15",["^[",[["^2U","^3<","^1K"]]],"^16",null,"^1S",true,"^17",["^[",[null,null]],"^W",1,"^V",767,"^X",767,"^18",3,"^19",true,"^Z",["^[",["^10",["^[",[["^2U","^3<","^1K"]]]]],"^12","Do not call this directly, use 'merge'"],"~$explain-data*",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",200,"^W",7,"^X",200,"^Y",20,"^Z",["^[",["^10",["^[",[["^11","^26","^27","^28","~$x"]]]]]],"^B","~$cljs.spec.alpha/explain-data*","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",20,"^15",["^[",[["^11","^26","^27","^28","~$x"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",200,"^X",200,"^18",5,"^19",true,"^Z",["^[",["^10",["^[",[["^11","^26","^27","^28","~$x"]]]]]],"~$add-ret",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",1063,"^W",8,"^X",1063,"^Y",15,"^25",true,"^Z",["^[",["^10",["^[",[["~$p","~$r","~$k"]]]]]],"^25",true,"^B","~$cljs.spec.alpha/add-ret","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",15,"^15",["^[",[["~$p","~$r","~$k"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",1063,"^X",1063,"^18",3,"^19",true,"^Z",["^[",["^10",["^[",[["~$p","~$r","~$k"]]]]]],"~$explain-pred-list",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",692,"^W",8,"^X",692,"^Y",25,"^25",true,"^Z",["^[",["^10",["^[",[["^2U","^3<","^26","^27","^28","~$x"]]]]]],"^25",true,"^B","~$cljs.spec.alpha/explain-pred-list","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",25,"^15",["^[",[["^2U","^3<","^26","^27","^28","~$x"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",692,"^X",692,"^18",6,"^19",true,"^Z",["^[",["^10",["^[",[["^2U","^3<","^26","^27","^28","~$x"]]]]]],"~$MAX_INT",["^ ","^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",19,"^W",14,"^X",19,"^Y",21,"~:const",true],"^B","~$cljs.spec.alpha/MAX_INT","^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",21,"~:const-expr",["^ ","~:op","~:constant","~:env",["^ ","~:context","~:expr"],"~:form",9007199254740991,"^1Y","^1Z"],"^W",1,"^3E",true,"^V",19,"^X",19,"^1Y","^1Z"],"~$check-asserts",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",1440,"^W",7,"^X",1440,"^Y",20,"^Z",["^[",["^10",["^[",[["~$flag"]]]]],"^12","Enable or disable spec asserts that have been compiled\nwith '*compile-asserts*' true.  See 'assert'.\nInitially set to boolean value of cljs.spec.alpha/*runtime-asserts*.\nDefaults to false."],"^B","~$cljs.spec.alpha/check-asserts","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",20,"^15",["^[",[["^3O"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",1440,"^X",1440,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["^3O"]]]]],"^12","Enable or disable spec asserts that have been compiled\nwith '*compile-asserts*' true.  See 'assert'.\nInitially set to boolean value of cljs.spec.alpha/*runtime-asserts*.\nDefaults to false."],"~$alt2",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",994,"^W",8,"^X",994,"^Y",12,"^25",true,"^Z",["^[",["^10",["^[",[["~$p1","~$p2"]]]]]],"^25",true,"^B","~$cljs.spec.alpha/alt2","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",12,"^15",["^[",[["^3R","^3S"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",994,"^X",994,"^18",2,"^19",true,"^Z",["^[",["^10",["^[",[["^3R","^3S"]]]]]],"~$assert*",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",1448,"^W",7,"^X",1448,"^Y",14,"^Z",["^[",["^10",["^[",[["^11","~$x"]]]]],"^12","Do not call this directly, use 'assert'."],"^B","~$cljs.spec.alpha/assert*","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",14,"^15",["^[",[["^11","~$x"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",1448,"^X",1448,"^18",2,"^19",true,"^Z",["^[",["^10",["^[",[["^11","~$x"]]]]],"^12","Do not call this directly, use 'assert'."],"~$inst-in-range?",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",1395,"^W",7,"^X",1395,"^Y",21,"^Z",["^[",["^10",["^[",[["~$start","~$end","~$inst"]]]]],"^12","Return true if inst at or after start and before end"],"^B","~$cljs.spec.alpha/inst-in-range?","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",21,"^15",["^[",[["^3X","^3Y","^3Z"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",1395,"^X",1395,"^18",3,"^19",true,"^Z",["^[",["^10",["^[",[["^3X","^3Y","^3Z"]]]]],"^12","Return true if inst at or after start and before end"],"~$registry-ref",["^ ","^B","~$cljs.spec.alpha/registry-ref","^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^V",47,"^W",1,"^X",47,"^Y",32,"^25",true,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",47,"^W",20,"^X",47,"^Y",32,"^25",true],"^1Y","^2B"],"~$accept?",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",931,"^W",8,"^X",931,"^Y",15,"^25",true,"^Z",["^[",["^10",["^[",[[["^ ","~:keys",["~:cljs.spec.alpha/op"]]]]]]]],"^25",true,"^B","~$cljs.spec.alpha/accept?","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",15,"^15",["^[",[["~$p__48968"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",931,"^X",931,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[[["^ ","^43",["^44"]]]]]]]],"~$and-spec-impl",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",703,"^W",19,"^X",703,"^Y",32,"^1S",true,"^Z",["^[",["^10",["^[",[["^2U","^3<","^1K"]]]]],"^12","Do not call this directly, use 'and'"],"^B","~$cljs.spec.alpha/and-spec-impl","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",32,"^15",["^[",[["^2U","^3<","^1K"]]],"^16",null,"^1S",true,"^17",["^[",[null,null]],"^W",1,"^V",703,"^X",703,"^18",3,"^19",true,"^Z",["^[",["^10",["^[",[["^2U","^3<","^1K"]]]]],"^12","Do not call this directly, use 'and'"],"~$accept",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",929,"^W",8,"^X",929,"^Y",14,"^25",true,"^Z",["^[",["^10",["^[",[["~$x"]]]]]],"^25",true,"^B","~$cljs.spec.alpha/accept","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",14,"^15",["^[",[["~$x"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",929,"^X",929,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["~$x"]]]]]],"~$recur-limit?",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",336,"^W",8,"^X",336,"^Y",20,"^25",true,"^Z",["^[",["^10",["^[",[["~$rmap","^1L","^26","~$k"]]]]]],"^25",true,"^B","~$cljs.spec.alpha/recur-limit?","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",20,"^15",["^[",[["^4<","^1L","^26","~$k"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",336,"^X",336,"^18",4,"^19",true,"^Z",["^[",["^10",["^[",[["^4<","^1L","^26","~$k"]]]]]],"~$describe*",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",45,"^W",4,"^X",45,"^Y",13,"~:protocol","^1=","^12",null,"^Z",["^[",["^10",["^[",[["^11"]]]]]],"^4?","^1=","^B","~$cljs.spec.alpha/describe*","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",13,"^15",["^[",[["^11"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",39,"^X",45,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["^11"]]]]],"^12",null],"~$t_cljs$spec$alpha48751",["^ ","^1;",19,"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^B","^2D","^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^1B",true,"^1C",true,"^W",5,"^V",386,"^1D",false,"^1E",["^;",["^1>","^1@"]]],"~$map-spec-impl",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",379,"^W",19,"^X",379,"^Y",32,"^1S",true,"^Z",["^[",["^10",["^[",[[["^ ","^43",["~$req-un","~$opt-un","~$keys-pred","~$pred-exprs","~$opt-keys","~$req-specs","~$req","~$req-keys","~$opt-specs","~$pred-forms","~$opt","^1K"],"~:as","~$argm"]]]]]],"^12","Do not call this directly, use 'spec' with a map argument"],"^B","~$cljs.spec.alpha/map-spec-impl","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",32,"^15",["^[",[["~$p__48748"]]],"^16",null,"^1S",true,"^17",["^[",[null,null]],"^W",1,"^V",379,"^X",379,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[[["^ ","^43",["^4C","^4D","^4E","^4F","^4G","^4H","^4I","^4J","^4K","^4L","^4M","^1K"],"^4N","^4O"]]]]]],"^12","Do not call this directly, use 'spec' with a map argument"],"~$reg-resolve!",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",66,"^W",8,"^X",66,"^Y",20,"^25",true,"^Z",["^[",["^10",["^[",[["~$k"]]]]],"^12","returns the spec/regex at end of alias chain starting with k, throws if not found, k if k not ident"],"^25",true,"^B","~$cljs.spec.alpha/reg-resolve!","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",20,"^15",["^[",[["~$k"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",66,"^X",66,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["~$k"]]]]],"^12","returns the spec/regex at end of alias chain starting with k, throws if not found, k if k not ident"],"~$t_cljs$spec$alpha48811",["^ ","^1;",9,"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^B","^2I","^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^1B",true,"^1C",true,"^W",6,"^V",507,"^1D",false,"^1E",["^;",["^1>","^1@"]]],"~$re-explain",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",1218,"^W",8,"^X",1218,"^Y",18,"^25",true,"^Z",["^[",["^10",["^[",[["^26","^27","^28","^39","^29"]]]]]],"^25",true,"^B","~$cljs.spec.alpha/re-explain","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",18,"^15",["^[",[["^26","^27","^28","^39","^29"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",1218,"^X",1218,"^18",5,"^19",true,"^Z",["^[",["^10",["^[",[["^26","^27","^28","^39","^29"]]]]]],"~$alts",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",993,"^W",8,"^X",993,"^Y",12,"^25",true,"^Z",["^[",["^10",["^[",[["~$&","^2T"]]]]],"^2[",["^ ","^14",true,"^18",0,"^15",[["^[",["^2T"]]],"^Z",["^[",[["~$&","^2T"]]],"^17",["^[",[null]]]],"^25",true,"^B","~$cljs.spec.alpha/alts","^14",true,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",12,"^2[",["^ ","^14",true,"^18",0,"^15",[["^[",["^2T"]]],"^Z",["^[",[["~$&","^2T"]]],"^17",["^[",[null]]],"^15",[["^[",["^2T"]]],"^16",null,"^17",["^[",[null]],"^W",1,"^V",993,"^X",993,"^18",0,"^19",true,"^Z",["^[",[["~$&","^2T"]]]],"~$with-name",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",85,"^W",8,"^X",85,"^Y",17,"^25",true,"^Z",["^[",["^10",["^[",[["^11","~$name"]]]]]],"^25",true,"^B","~$cljs.spec.alpha/with-name","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",17,"^15",["^[",[["^11","^4Z"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",85,"^X",85,"^18",2,"^19",true,"^Z",["^[",["^10",["^[",[["^11","^4Z"]]]]]],"~$explain",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",257,"^W",7,"^X",257,"^Y",14,"^Z",["^[",["^10",["^[",[["^11","~$x"]]]]],"^12","Given a spec and a value that fails to conform, prints an explanation to *out*."],"^B","~$cljs.spec.alpha/explain","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",14,"^15",["^[",[["^11","~$x"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",257,"^X",257,"^18",2,"^19",true,"^Z",["^[",["^10",["^[",[["^11","~$x"]]]]],"^12","Given a spec and a value that fails to conform, prints an explanation to *out*."],"~$spec-name",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",93,"^W",8,"^X",93,"^Y",17,"^25",true,"^Z",["^[",["^10",["^[",[["^11"]]]]]],"^25",true,"^B","~$cljs.spec.alpha/spec-name","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",17,"^15",["^[",[["^11"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",93,"^X",93,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["^11"]]]]]],"~$t_cljs$spec$alpha49093",["^ ","^1;",3,"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^B","^2K","^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^1B",true,"^1C",true,"^W",3,"^V",1247,"^1D",false,"^1E",["^;",["^1>","^1@"]]],"~$map-spec",["^ ","^B","~$cljs.spec.alpha/map-spec","^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^V",320,"^W",1,"^X",320,"^Y",18,"~:declared",true,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",320,"^W",10,"^X",320,"^Y",18,"^57",true]],"~$->t_cljs$spec$alpha48919",["^ ","^S",null,"^T",["^ ","^1C",true,"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^1E",["^;",["^1>","^1@"]],"^1G","^1H","^Z",["^[",["^10",["^[",[["^R","~$max-count","~$check?","^1K","~$gen-max","~$p__48916","^1T","~$cpred","~$conform-keys","~$kind-form","~$addcv","~$cfns","~$describe-form","~$distinct","^11","~$kfn","~$gen-into","~$count","~$min-count","~$opts","~$kind","~$conform-all","~$map__48917","~$conform-into","~$meta48920"]]]]],"^U",null],"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^B","~$cljs.spec.alpha/->t_cljs$spec$alpha48919","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^15",["^[",[["^R","^59","^5:","^1K","^5;","^5<","^1T","^5=","^5>","^5?","^5@","^5A","^5B","^5C","^11","^5D","^5E","^5F","^5G","^5H","^5I","^5J","^5K","^5L","^5M"]]],"^16",null,"^17",["^[",[null,null]],"^1C",true,"^W",6,"^1G","^1H","^V",833,"^18",25,"^19",true,"^Z",["^[",["^10",["^[",[["^R","^59","^5:","^1K","^5;","^5<","^1T","^5=","^5>","^5?","^5@","^5A","^5B","^5C","^11","^5D","^5E","^5F","^5G","^5H","^5I","^5J","^5K","^5L","^5M"]]]]],"^1E",["^;",["^1>","^1@"]]],"~$with-gen*",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",44,"^W",4,"^X",44,"^Y",13,"^4?","^1=","^12",null,"^Z",["^[",["^10",["^[",[["^11","^1K"]]]]]],"^4?","^1=","^B","~$cljs.spec.alpha/with-gen*","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",13,"^15",["^[",[["^11","^1K"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",39,"^X",44,"^18",2,"^19",true,"^Z",["^[",["^10",["^[",[["^11","^1K"]]]]],"^12",null],"~$or-spec-impl",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",613,"^W",19,"^X",613,"^Y",31,"^1S",true,"^Z",["^[",["^10",["^[",[["^?","^2U","^3<","^1K"]]]]],"^12","Do not call this directly, use 'or'"],"^B","~$cljs.spec.alpha/or-spec-impl","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",31,"^15",["^[",[["^?","^2U","^3<","^1K"]]],"^16",null,"^1S",true,"^17",["^[",[null,null]],"^W",1,"^V",613,"^X",613,"^18",4,"^19",true,"^Z",["^[",["^10",["^[",[["^?","^2U","^3<","^1K"]]]]],"^12","Do not call this directly, use 'or'"],"~$specize",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",140,"^W",8,"^X",140,"^Y",15,"^25",true,"^Z",["^[",["^10",["^[",[["~$s"],["~$s","^R"]]]]],"^2[",["^ ","^14",false,"^18",2,"^15",["^[",[["~$s"],["~$s","^R"]]],"^Z",["^[",[["~$s"],["~$s","^R"]]],"^17",["^[",[null,null]]]],"^25",true,"^B","~$cljs.spec.alpha/specize","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",15,"^2[",["^ ","^14",false,"^18",2,"^15",["^[",[["~$s"],["~$s","^R"]]],"^Z",["^[",[["~$s"],["~$s","^R"]]],"^17",["^[",[null,null]]],"^15",["^[",[["~$s"],["~$s","^R"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",140,"^X",140,"^18",2,"^19",true,"^Z",["^[",[["~$s"],["~$s","^R"]]]],"~$*fspec-iterations*",["^ ","^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",27,"^W",16,"^X",27,"^Y",34,"^1W",true],"^B","~$cljs.spec.alpha/*fspec-iterations*","^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",34,"^W",1,"^1W",true,"^V",27,"^X",27,"^1Y","^1Z","^12","The number of times an anonymous fn specified by fspec will be (generatively) tested during conform"],"~$Spec",["^ ","^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",39,"^W",14,"^X",39,"^Y",18,"^12",null,"^2<",true,"^2=",["^[",["@interface"]],"^2>",["^ ","^2?",["^ ","~$conform*",[["^11","~$x"]],"~$unform*",[["^11","~$y"]],"~$explain*",[["^11","^26","^27","^28","~$x"]],"~$gen*",[["^11","~$overrides","^26","^4<"]],"^5O",[["^11","^1K"]],"^4>",[["^11"]]]]],"^2<",true,"^B","^1=","^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",18,"^W",1,"^V",39,"^2>",["^ ","^2?",["^ ","^5X",[["^11","~$x"]],"^5Y",[["^11","~$y"]],"^5Z",[["^11","^26","^27","^28","~$x"]],"^5[",[["^11","^60","^26","^4<"]],"^5O",[["^11","^1K"]],"^4>",[["^11"]]]],"^2A",null,"^X",39,"^1Y","^2B","^2C",["^;",["^2D","^2E","^2F","^2G","^1A","^2I","^2K","^2L","^2M","^2N","^2P","^2Q"]],"^12",null,"^2=",["^[",["@interface"]]],"~$unform",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",155,"^W",7,"^X",155,"^Y",13,"^Z",["^[",["^10",["^[",[["^11","~$x"]]]]],"^12","Given a spec and a value created by or compliant with a call to\n  'conform' with the same spec, returns a value with all conform\n   destructuring undone."],"^B","~$cljs.spec.alpha/unform","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",13,"^15",["^[",[["^11","~$x"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",155,"^X",155,"^18",2,"^19",true,"^Z",["^[",["^10",["^[",[["^11","~$x"]]]]],"^12","Given a spec and a value created by or compliant with a call to\n  'conform' with the same spec, returns a value with all conform\n   destructuring undone."],"~$valid?",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",356,"^W",7,"^X",356,"^Y",13,"^Z",["^[",["^10",["^[",[["^11","~$x"],["^11","~$x","^R"]]]]],"^12","Helper function that returns true when x is valid for spec.","^2[",["^ ","^14",false,"^18",3,"^15",["^[",[["^11","~$x"],["^11","~$x","^R"]]],"^Z",["^[",[["^11","~$x"],["^11","~$x","^R"]]],"^17",["^[",[null,null]]]],"^B","~$cljs.spec.alpha/valid?","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",13,"^2[",["^ ","^14",false,"^18",3,"^15",["^[",[["^11","~$x"],["^11","~$x","^R"]]],"^Z",["^[",[["^11","~$x"],["^11","~$x","^R"]]],"^17",["^[",[null,null]]],"^15",["^[",[["^11","~$x"],["^11","~$x","^R"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",356,"^X",356,"^18",3,"^19",true,"^Z",["^[",[["^11","~$x"],["^11","~$x","^R"]]],"^12","Helper function that returns true when x is valid for spec."],"~$t_cljs$spec$alpha49120",["^ ","^1;",5,"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^B","^2N","^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^1B",true,"^1C",true,"^W",5,"^V",1364,"^1D",false,"^1E",["^;",["^1>","^1@"]]],"~$->t_cljs$spec$alpha49100",["^ ","^S",null,"^T",["^ ","^1C",true,"^1<",["^;",["^1=","^1>","^1?","^1@","~$cljs.core/ILookup"]],"^1E",["^;",["^1>","^1@","^67"]],"^1G","^1H","^Z",["^[",["^10",["^[",[["~$argspec","~$aform","~$retspec","~$rform","~$fnspec","~$fform","^1K","~$specs","~$meta49101"]]]]],"^U",null],"^1<",["^;",["^1=","^1>","^1?","^1@","^67"]],"^B","~$cljs.spec.alpha/->t_cljs$spec$alpha49100","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^15",["^[",[["^68","^69","^6:","^6;","^6<","^6=","^1K","^6>","^6?"]]],"^16",null,"^17",["^[",[null,null]],"^1C",true,"^W",5,"^1G","^1H","^V",1296,"^18",9,"^19",true,"^Z",["^[",["^10",["^[",[["^68","^69","^6:","^6;","^6<","^6=","^1K","^6>","^6?"]]]]],"^1E",["^;",["^1>","^1@","^67"]]],"~$->t_cljs$spec$alpha48800",["^ ","^S",null,"^T",["^ ","^1C",true,"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^1E",["^;",["^1>","^1@"]],"^1G","^1H","^Z",["^[",["^10",["^[",[["^R","^1T","^1K","~$cpred?","~$unc","~$meta48801"]]]]],"^U",null],"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^B","~$cljs.spec.alpha/->t_cljs$spec$alpha48800","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^15",["^[",[["^R","^1T","^1K","^6B","^6C","^6D"]]],"^16",null,"^17",["^[",[null,null]],"^1C",true,"^W",6,"^1G","^1H","^V",471,"^18",6,"^19",true,"^Z",["^[",["^10",["^[",[["^R","^1T","^1K","^6B","^6C","^6D"]]]]],"^1E",["^;",["^1>","^1@"]]],"^K",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",280,"^W",7,"^X",280,"^Y",10,"^Z",["^[",["^10",["^[",[["^11"],["^11","^60"]]]]],"^12","Given a spec, returns the generator for it, or throws if none can\n  be constructed. Optionally an overrides map can be provided which\n  should map spec names or paths (vectors of keywords) to no-arg\n  generator-creating fns. These will be used instead of the generators at those\n  names/paths. Note that parent generator (in the spec or overrides\n  map) will supersede those of any subtrees. A generator for a regex\n  op must always return a sequential collection (i.e. a generator for\n  s/? should return either an empty sequence/vector or a\n  sequence/vector with one item in it)","^2[",["^ ","^14",false,"^18",2,"^15",["^[",[["^11"],["^11","^60"]]],"^Z",["^[",[["^11"],["^11","^60"]]],"^17",["^[",[null,null]]]],"^B","~$cljs.spec.alpha/gen","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",10,"^2[",["^ ","^14",false,"^18",2,"^15",["^[",[["^11"],["^11","^60"]]],"^Z",["^[",[["^11"],["^11","^60"]]],"^17",["^[",[null,null]]],"^15",["^[",[["^11"],["^11","^60"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",280,"^X",280,"^18",2,"^19",true,"^Z",["^[",[["^11"],["^11","^60"]]],"^12","Given a spec, returns the generator for it, or throws if none can\n  be constructed. Optionally an overrides map can be provided which\n  should map spec names or paths (vectors of keywords) to no-arg\n  generator-creating fns. These will be used instead of the generators at those\n  names/paths. Note that parent generator (in the spec or overrides\n  map) will supersede those of any subtrees. A generator for a regex\n  op must always return a sequential collection (i.e. a generator for\n  s/? should return either an empty sequence/vector or a\n  sequence/vector with one item in it)"],"~$->t_cljs$spec$alpha48825",["^ ","^S",null,"^T",["^ ","^1C",true,"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^1E",["^;",["^1>","^1@"]],"^1G","^1H","^Z",["^[",["^10",["^[",[["^2U","^3<","^1K","^6>","~$cnt","~$meta48826"]]]]],"^U",null],"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^B","~$cljs.spec.alpha/->t_cljs$spec$alpha48825","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^15",["^[",[["^2U","^3<","^1K","^6>","^6H","^6I"]]],"^16",null,"^17",["^[",[null,null]],"^1C",true,"^W",6,"^1G","^1H","^V",551,"^18",6,"^19",true,"^Z",["^[",["^10",["^[",[["^2U","^3<","^1K","^6>","^6H","^6I"]]]]],"^1E",["^;",["^1>","^1@"]]],"~$nonconforming",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",1339,"^W",7,"^X",1339,"^Y",20,"^Z",["^[",["^10",["^[",[["^11"]]]]],"^12","takes a spec and returns a spec that has the same properties except\n  'conform' returns the original (not the conformed) value. Note, will specize regex ops."],"^B","~$cljs.spec.alpha/nonconforming","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",20,"^15",["^[",[["^11"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",1339,"^X",1339,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["^11"]]]]],"^12","takes a spec and returns a spec that has the same properties except\n  'conform' returns the original (not the conformed) value. Note, will specize regex ops."],"~$->t_cljs$spec$alpha48835",["^ ","^S",null,"^T",["^ ","^1C",true,"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^1E",["^;",["^1>","^1@"]],"^1G","^1H","^Z",["^[",["^10",["^[",[["^?","^2U","^3<","^1K","^1L","~$kps","^6>","~$cform","~$meta48836"]]]]],"^U",null],"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^B","~$cljs.spec.alpha/->t_cljs$spec$alpha48835","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^15",["^[",[["^?","^2U","^3<","^1K","^1L","^6N","^6>","^6O","^6P"]]],"^16",null,"^17",["^[",[null,null]],"^1C",true,"^W",5,"^1G","^1H","^V",651,"^18",9,"^19",true,"^Z",["^[",["^10",["^[",[["^?","^2U","^3<","^1K","^1L","^6N","^6>","^6O","^6P"]]]]],"^1E",["^;",["^1>","^1@"]]],"~$->t_cljs$spec$alpha48907",["^ ","^S",null,"^T",["^ ","^1C",true,"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^1E",["^;",["^1>","^1@"]],"^1G","^1H","^Z",["^[",["^10",["^[",[["^2U","^3<","^1K","~$meta48908"]]]]],"^U",null],"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^B","~$cljs.spec.alpha/->t_cljs$spec$alpha48907","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^15",["^[",[["^2U","^3<","^1K","^6S"]]],"^16",null,"^17",["^[",[null,null]],"^1C",true,"^W",3,"^1G","^1H","^V",770,"^18",4,"^19",true,"^Z",["^[",["^10",["^[",[["^2U","^3<","^1K","^6S"]]]]],"^1E",["^;",["^1>","^1@"]]],"^5Y",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",41,"^W",4,"^X",41,"^Y",11,"^4?","^1=","^12",null,"^Z",["^[",["^10",["^[",[["^11","~$y"]]]]]],"^4?","^1=","^B","~$cljs.spec.alpha/unform*","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",11,"^15",["^[",[["^11","~$y"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",39,"^X",41,"^18",2,"^19",true,"^Z",["^[",["^10",["^[",[["^11","~$y"]]]]],"^12",null],"~$->sym",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",308,"^W",8,"^X",308,"^Y",13,"^25",true,"^Z",["^[",["^10",["^[",[["~$x"]]]]],"^12","Returns a symbol from a symbol or var"],"^25",true,"^B","~$cljs.spec.alpha/->sym","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",13,"^15",["^[",[["~$x"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",308,"^X",308,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["~$x"]]]]],"^12","Returns a symbol from a symbol or var"],"~$abbrev",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",168,"^W",7,"^X",168,"^Y",13,"^Z",["^[",["^10",["^[",[["^R"]]]]]],"^B","~$cljs.spec.alpha/abbrev","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",13,"^15",["^[",[["^R"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",168,"^X",168,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["^R"]]]]]],"~$regex?",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",80,"^W",7,"^X",80,"^Y",13,"^Z",["^[",["^10",["^[",[["~$x"]]]]],"^12","returns x if x is a (clojure.spec) regex op, else logical false"],"^B","~$cljs.spec.alpha/regex?","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",13,"^15",["^[",[["~$x"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",80,"^X",80,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["~$x"]]]]],"^12","returns x if x is a (clojure.spec) regex op, else logical false"],"~$->t_cljs$spec$alpha49120",["^ ","^S",null,"^T",["^ ","^1C",true,"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^1E",["^;",["^1>","^1@"]],"^1G","^1H","^Z",["^[",["^10",["^[",[["^R","^1T","^1K","^11","~$meta49121"]]]]],"^U",null],"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^B","~$cljs.spec.alpha/->t_cljs$spec$alpha49120","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^15",["^[",[["^R","^1T","^1K","^11","^71"]]],"^16",null,"^17",["^[",[null,null]],"^1C",true,"^W",5,"^1G","^1H","^V",1364,"^18",5,"^19",true,"^Z",["^[",["^10",["^[",[["^R","^1T","^1K","^11","^71"]]]]],"^1E",["^;",["^1>","^1@"]]],"~$int-in-range?",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",1402,"^W",7,"^X",1402,"^Y",20,"^Z",["^[",["^10",["^[",[["^3X","^3Y","~$val"]]]]],"^12","Return true if start <= val, val < end and val is a fixed\n  precision integer."],"^B","~$cljs.spec.alpha/int-in-range?","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",20,"^15",["^[",[["^3X","^3Y","^74"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",1402,"^X",1402,"^18",3,"^19",true,"^Z",["^[",["^10",["^[",[["^3X","^3Y","^74"]]]]],"^12","Return true if start <= val, val < end and val is a fixed\n  precision integer."],"~$dt",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",343,"^W",8,"^X",343,"^Y",10,"^25",true,"^Z",["^[",["^10",["^[",[["^1T","~$x","^R"],["^1T","~$x","^R","^6B"]]]]],"^2[",["^ ","^14",false,"^18",4,"^15",["^[",[["^1T","~$x","^R"],["^1T","~$x","^R","^6B"]]],"^Z",["^[",[["^1T","~$x","^R"],["^1T","~$x","^R","^6B"]]],"^17",["^[",[null,null]]]],"^25",true,"^B","~$cljs.spec.alpha/dt","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",10,"^2[",["^ ","^14",false,"^18",4,"^15",["^[",[["^1T","~$x","^R"],["^1T","~$x","^R","^6B"]]],"^Z",["^[",[["^1T","~$x","^R"],["^1T","~$x","^R","^6B"]]],"^17",["^[",[null,null]]],"^15",["^[",[["^1T","~$x","^R"],["^1T","~$x","^R","^6B"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",343,"^X",343,"^18",4,"^19",true,"^Z",["^[",[["^1T","~$x","^R"],["^1T","~$x","^R","^6B"]]]],"~$preturn",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",1027,"^W",8,"^X",1027,"^Y",15,"^25",true,"^Z",["^[",["^10",["^[",[["~$p"]]]]]],"^25",true,"^B","~$cljs.spec.alpha/preturn","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",15,"^15",["^[",[["~$p"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",1027,"^X",1027,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["~$p"]]]]]],"~$->t_cljs$spec$alpha48893",["^ ","^S",null,"^T",["^ ","^1C",true,"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^1E",["^;",["^1>","^1@"]],"^1G","^1H","^Z",["^[",["^10",["^[",[["^2U","^3<","^1K","^6>","^6O","~$meta48894"]]]]],"^U",null],"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^B","~$cljs.spec.alpha/->t_cljs$spec$alpha48893","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^15",["^[",[["^2U","^3<","^1K","^6>","^6O","^7;"]]],"^16",null,"^17",["^[",[null,null]],"^1C",true,"^W",5,"^1G","^1H","^V",734,"^18",6,"^19",true,"^Z",["^[",["^10",["^[",[["^2U","^3<","^1K","^6>","^6O","^7;"]]]]],"^1E",["^;",["^1>","^1@"]]],"~$re-conform",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",1205,"^W",8,"^X",1205,"^Y",18,"^25",true,"^Z",["^[",["^10",["^[",[["~$p",["~$x","~$&","~$xs","^4N","~$data"]]]]]]],"^25",true,"^B","~$cljs.spec.alpha/re-conform","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",18,"^15",["^[",[["~$p","~$p__49074"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",1205,"^X",1205,"^18",2,"^19",true,"^Z",["^[",["^10",["^[",[["~$p",["~$x","~$&","^7>","^4N","^7?"]]]]]]],"~$spec?",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",74,"^W",7,"^X",74,"^Y",12,"^Z",["^[",["^10",["^[",[["~$x"]]]]],"^12","returns x if x is a spec object, else logical false"],"^B","~$cljs.spec.alpha/spec?","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",12,"^15",["^[",[["~$x"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",74,"^X",74,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["~$x"]]]]],"^12","returns x if x is a spec object, else logical false"],"~$registry",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",303,"^W",7,"^X",303,"^Y",15,"^Z",["^[",["^10",["^[",[[]]]]],"^12","returns the registry map, prefer 'get-spec' to lookup a spec by name"],"^B","~$cljs.spec.alpha/registry","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",15,"^15",["^[",[[]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",303,"^X",303,"^18",0,"^19",true,"^Z",["^[",["^10",["^[",[[]]]]],"^12","returns the registry map, prefer 'get-spec' to lookup a spec by name"],"~$t_cljs$spec$alpha48835",["^ ","^1;",9,"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^B","^2P","^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^1B",true,"^1C",true,"^W",5,"^V",651,"^1D",false,"^1E",["^;",["^1>","^1@"]]],"~$rep+impl",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",962,"^W",19,"^X",962,"^Y",27,"^1S",true,"^Z",["^[",["^10",["^[",[["^R","~$p"]]]]],"^12","Do not call this directly, use '+'"],"^B","~$cljs.spec.alpha/rep+impl","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",27,"^15",["^[",[["^R","~$p"]]],"^16",null,"^1S",true,"^17",["^[",[null,null]],"^W",1,"^V",962,"^X",962,"^18",2,"^19",true,"^Z",["^[",["^10",["^[",[["^R","~$p"]]]]],"^12","Do not call this directly, use '+'"],"~$deriv",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",1076,"^W",8,"^X",1076,"^Y",13,"^25",true,"^Z",["^[",["^10",["^[",[["~$p","~$x"]]]]]],"^25",true,"^B","~$cljs.spec.alpha/deriv","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",13,"^15",["^[",[["~$p","~$x"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",1076,"^X",1076,"^18",2,"^19",true,"^Z",["^[",["^10",["^[",[["~$p","~$x"]]]]]],"~$deep-resolve",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",49,"^W",8,"^X",49,"^Y",20,"^25",true,"^Z",["^[",["^10",["^[",[["~$reg","~$k"]]]]]],"^25",true,"^B","~$cljs.spec.alpha/deep-resolve","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",20,"^15",["^[",[["^7L","~$k"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",49,"^X",49,"^18",2,"^19",true,"^Z",["^[",["^10",["^[",[["^7L","~$k"]]]]]],"~$exercise",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",1386,"^W",7,"^X",1386,"^Y",15,"^Z",["^[",["^10",["^[",[["^11"],["^11","~$n"],["^11","~$n","^60"]]]]],"^12","generates a number (default 10) of values compatible with spec and maps conform over them,\n  returning a sequence of [val conformed-val] tuples. Optionally takes\n  a generator overrides map as per gen","^2[",["^ ","^14",false,"^18",3,"^15",["^[",[["^11"],["^11","~$n"],["^11","~$n","^60"]]],"^Z",["^[",[["^11"],["^11","~$n"],["^11","~$n","^60"]]],"^17",["^[",[null,null,null]]]],"^B","~$cljs.spec.alpha/exercise","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",15,"^2[",["^ ","^14",false,"^18",3,"^15",["^[",[["^11"],["^11","~$n"],["^11","~$n","^60"]]],"^Z",["^[",[["^11"],["^11","~$n"],["^11","~$n","^60"]]],"^17",["^[",[null,null,null]]],"^15",["^[",[["^11"],["^11","~$n"],["^11","~$n","^60"]]],"^16",null,"^17",["^[",[null,null,null]],"^W",1,"^V",1386,"^X",1386,"^18",3,"^19",true,"^Z",["^[",[["^11"],["^11","~$n"],["^11","~$n","^60"]]],"^12","generates a number (default 10) of values compatible with spec and maps conform over them,\n  returning a sequence of [val conformed-val] tuples. Optionally takes\n  a generator overrides map as per gen"],"~$explain-data",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",207,"^W",7,"^X",207,"^Y",19,"^Z",["^[",["^10",["^[",[["^11","~$x"]]]]],"^12","Given a spec and a value x which ought to conform, returns nil if x\n  conforms, else a map with at least the key ::problems whose value is\n  a collection of problem-maps, where problem-map has at least :path :pred and :val\n  keys describing the predicate and the value that failed at that\n  path."],"^B","~$cljs.spec.alpha/explain-data","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",19,"^15",["^[",[["^11","~$x"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",207,"^X",207,"^18",2,"^19",true,"^Z",["^[",["^10",["^[",[["^11","~$x"]]]]],"^12","Given a spec and a value x which ought to conform, returns nil if x\n  conforms, else a map with at least the key ::problems whose value is\n  a collection of problem-maps, where problem-map has at least :path :pred and :val\n  keys describing the predicate and the value that failed at that\n  path."],"~$tuple-impl",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",545,"^W",19,"^X",545,"^Y",29,"^1S",true,"^Z",["^[",["^10",["^[",[["^2U","^3<"],["^2U","^3<","^1K"]]]]],"^12","Do not call this directly, use 'tuple'","^2[",["^ ","^14",false,"^18",3,"^15",["^[",[["^2U","^3<"],["^2U","^3<","^1K"]]],"^Z",["^[",[["^2U","^3<"],["^2U","^3<","^1K"]]],"^17",["^[",[null,null]]]],"^B","~$cljs.spec.alpha/tuple-impl","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",29,"^2[",["^ ","^14",false,"^18",3,"^15",["^[",[["^2U","^3<"],["^2U","^3<","^1K"]]],"^Z",["^[",[["^2U","^3<"],["^2U","^3<","^1K"]]],"^17",["^[",[null,null]]],"^15",["^[",[["^2U","^3<"],["^2U","^3<","^1K"]]],"^16",null,"^1S",true,"^17",["^[",[null,null]],"^W",1,"^V",545,"^X",545,"^18",3,"^19",true,"^Z",["^[",[["^2U","^3<"],["^2U","^3<","^1K"]]],"^12","Do not call this directly, use 'tuple'"],"~$multi-spec-impl",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",495,"^W",19,"^X",495,"^Y",34,"^1S",true,"^Z",["^[",["^10",["^[",[["^R","^1I","^1J"],["^R","^1I","^1J","^1K"]]]]],"^12","Do not call this directly, use 'multi-spec'","^2[",["^ ","^14",false,"^18",4,"^15",["^[",[["^R","^1I","^1J"],["^R","^1I","^1J","^1K"]]],"^Z",["^[",[["^R","^1I","^1J"],["^R","^1I","^1J","^1K"]]],"^17",["^[",[null,null]]]],"^B","~$cljs.spec.alpha/multi-spec-impl","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",34,"^2[",["^ ","^14",false,"^18",4,"^15",["^[",[["^R","^1I","^1J"],["^R","^1I","^1J","^1K"]]],"^Z",["^[",[["^R","^1I","^1J"],["^R","^1I","^1J","^1K"]]],"^17",["^[",[null,null]]],"^15",["^[",[["^R","^1I","^1J"],["^R","^1I","^1J","^1K"]]],"^16",null,"^1S",true,"^17",["^[",[null,null]],"^W",1,"^V",495,"^X",495,"^18",4,"^19",true,"^Z",["^[",[["^R","^1I","^1J"],["^R","^1I","^1J","^1K"]]],"^12","Do not call this directly, use 'multi-spec'"],"~$conform",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",149,"^W",7,"^X",149,"^Y",14,"^Z",["^[",["^10",["^[",[["^11","~$x"]]]]],"^12","Given a spec and a value, returns :clojure.spec/invalid if value does not match spec,\n  else the (possibly destructured) value."],"^B","~$cljs.spec.alpha/conform","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",14,"^15",["^[",[["^11","~$x"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",149,"^X",149,"^18",2,"^19",true,"^Z",["^[",["^10",["^[",[["^11","~$x"]]]]],"^12","Given a spec and a value, returns :clojure.spec/invalid if value does not match spec,\n  else the (possibly destructured) value."],"^5[",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",43,"^W",4,"^X",43,"^Y",8,"^4?","^1=","^12",null,"^Z",["^[",["^10",["^[",[["^11","^60","^26","^4<"]]]]]],"^4?","^1=","^B","~$cljs.spec.alpha/gen*","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",8,"^15",["^[",[["^11","^60","^26","^4<"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",39,"^X",43,"^18",4,"^19",true,"^Z",["^[",["^10",["^[",[["^11","^60","^26","^4<"]]]]],"^12",null],"~$->t_cljs$spec$alpha49093",["^ ","^S",null,"^T",["^ ","^1C",true,"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^1E",["^;",["^1>","^1@"]],"^1G","^1H","^Z",["^[",["^10",["^[",[["^39","^1K","~$meta49094"]]]]],"^U",null],"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^B","~$cljs.spec.alpha/->t_cljs$spec$alpha49093","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^15",["^[",[["^39","^1K","^7Z"]]],"^16",null,"^17",["^[",[null,null]],"^1C",true,"^W",3,"^1G","^1H","^V",1247,"^18",3,"^19",true,"^Z",["^[",["^10",["^[",[["^39","^1K","^7Z"]]]]],"^1E",["^;",["^1>","^1@"]]],"~$t_cljs$spec$alpha48800",["^ ","^1;",6,"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^B","^2L","^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^1B",true,"^1C",true,"^W",6,"^V",471,"^1D",false,"^1E",["^;",["^1>","^1@"]]],"~$fspec-impl",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",1292,"^W",19,"^X",1292,"^Y",29,"^1S",true,"^Z",["^[",["^10",["^[",[["^68","^69","^6:","^6;","^6<","^6=","^1K"]]]]],"^12","Do not call this directly, use 'fspec'"],"^B","~$cljs.spec.alpha/fspec-impl","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",29,"^15",["^[",[["^68","^69","^6:","^6;","^6<","^6=","^1K"]]],"^16",null,"^1S",true,"^17",["^[",[null,null]],"^W",1,"^V",1292,"^X",1292,"^18",7,"^19",true,"^Z",["^[",["^10",["^[",[["^68","^69","^6:","^6;","^6<","^6=","^1K"]]]]],"^12","Do not call this directly, use 'fspec'"],"~$inck",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",340,"^W",8,"^X",340,"^Y",12,"^25",true,"^Z",["^[",["^10",["^[",[["~$m","~$k"]]]]]],"^25",true,"^B","~$cljs.spec.alpha/inck","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",12,"^15",["^[",[["~$m","~$k"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",340,"^X",340,"^18",2,"^19",true,"^Z",["^[",["^10",["^[",[["~$m","~$k"]]]]]],"~$->t_cljs$spec$alpha49117",["^ ","^S",null,"^T",["^ ","^1C",true,"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^1E",["^;",["^1>","^1@"]],"^1G","^1H","^Z",["^[",["^10",["^[",[["^11","~$meta49118"]]]]],"^U",null],"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^B","~$cljs.spec.alpha/->t_cljs$spec$alpha49117","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^15",["^[",[["^11","^86"]]],"^16",null,"^17",["^[",[null,null]],"^1C",true,"^W",5,"^1G","^1H","^V",1344,"^18",2,"^19",true,"^Z",["^[",["^10",["^[",[["^11","^86"]]]]],"^1E",["^;",["^1>","^1@"]]],"~$*coll-check-limit*",["^ ","^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",31,"^W",16,"^X",31,"^Y",34,"^1W",true],"^B","~$cljs.spec.alpha/*coll-check-limit*","^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",34,"^W",1,"^1W",true,"^V",31,"^X",31,"^1Y","^1Z","^12","The number of items validated in a collection spec'ed with 'every'"],"~$->t_cljs$spec$alpha48751",["^ ","^S",null,"^T",["^ ","^1C",true,"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^1E",["^;",["^1>","^1@"]],"^1G","^1H","^Z",["^[",["^10",["^[",[["^4Q","~$keys->specnames","^4M","~$map__48749","^4C","^4D","^1K","^4F","^4E","^4O","^4G","^4H","^4I","^1L","^4J","^4K","~$k->s","^4L","~$meta48752"]]]]],"^U",null],"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^B","~$cljs.spec.alpha/->t_cljs$spec$alpha48751","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^15",["^[",[["^4Q","^8;","^4M","^8<","^4C","^4D","^1K","^4F","^4E","^4O","^4G","^4H","^4I","^1L","^4J","^4K","^8=","^4L","^8>"]]],"^16",null,"^17",["^[",[null,null]],"^1C",true,"^W",5,"^1G","^1H","^V",386,"^18",19,"^19",true,"^Z",["^[",["^10",["^[",[["^4Q","^8;","^4M","^8<","^4C","^4D","^1K","^4F","^4E","^4O","^4G","^4H","^4I","^1L","^4J","^4K","^8=","^4L","^8>"]]]]],"^1E",["^;",["^1>","^1@"]]],"~$get-spec",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",315,"^W",7,"^X",315,"^Y",15,"^Z",["^[",["^10",["^[",[["~$k"]]]]],"^12","Returns spec registered for keyword/symbol/var k, or nil."],"^B","~$cljs.spec.alpha/get-spec","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",15,"^15",["^[",[["~$k"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",315,"^X",315,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["~$k"]]]]],"^12","Returns spec registered for keyword/symbol/var k, or nil."],"~$gensub",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",269,"^W",8,"^X",269,"^Y",14,"^25",true,"^Z",["^[",["^10",["^[",[["^11","^60","^26","^4<","^R"]]]]]],"^25",true,"^B","~$cljs.spec.alpha/gensub","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",14,"^15",["^[",[["^11","^60","^26","^4<","^R"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",269,"^X",269,"^18",5,"^19",true,"^Z",["^[",["^10",["^[",[["^11","^60","^26","^4<","^R"]]]]]],"~$the-spec",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",116,"^W",8,"^X",116,"^Y",16,"^25",true,"^Z",["^[",["^10",["^[",[["~$spec-or-k"]]]]],"^12","spec-or-k must be a spec, regex or kw/sym, else returns nil. Throws if unresolvable kw/sym"],"^25",true,"^B","~$cljs.spec.alpha/the-spec","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",16,"^15",["^[",[["^8E"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",116,"^X",116,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["^8E"]]]]],"^12","spec-or-k must be a spec, regex or kw/sym, else returns nil. Throws if unresolvable kw/sym"],"~$coll-prob",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",747,"^W",8,"^X",747,"^Y",17,"^25",true,"^Z",["^[",["^10",["^[",[["~$x","^5D","~$kform","^5C","^5F","^5G","^59","^26","^27","^28"]]]]]],"^25",true,"^B","~$cljs.spec.alpha/coll-prob","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",17,"^15",["^[",[["~$x","^5D","^8H","^5C","^5F","^5G","^59","^26","^27","^28"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",747,"^X",747,"^18",10,"^19",true,"^Z",["^[",["^10",["^[",[["~$x","^5D","^8H","^5C","^5F","^5G","^59","^26","^27","^28"]]]]]],"~$every-impl",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",795,"^W",19,"^X",795,"^Y",29,"^1S",true,"^Z",["^[",["^10",["^[",[["^R","^1T","^5H"],["^R","^1T",["^ ","^5E","~:into","^5B","~:cljs.spec.alpha/describe","^43",["^5I","~:cljs.spec.alpha/kind-form","^5F","^59","^5G","^5C","^5;","~:cljs.spec.alpha/kfn","~:cljs.spec.alpha/cpred","^5>","~:cljs.spec.alpha/conform-all"],"~:or",["^ ","^5;",20],"^4N","^5H"],"^1K"]]]]],"^12","Do not call this directly, use 'every', 'every-kv', 'coll-of' or 'map-of'","^2[",["^ ","^14",false,"^18",4,"^15",["^[",[["^R","^1T","^5H"],["^R","^1T",["^ ","^5E","^8K","^5B","^8L","^43",["^5I","^8M","^5F","^59","^5G","^5C","^5;","^8N","^8O","^5>","^8P"],"^8Q",["^ ","^5;",20],"^4N","^5H"],"^1K"]]],"^Z",["^[",[["^R","^1T","^5H"],["^R","^1T",["^ ","^5E","^8K","^5B","^8L","^43",["^5I","^8M","^5F","^59","^5G","^5C","^5;","^8N","^8O","^5>","^8P"],"^8Q",["^ ","^5;",20],"^4N","^5H"],"^1K"]]],"^17",["^[",[null,null]]]],"^B","~$cljs.spec.alpha/every-impl","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",29,"^2[",["^ ","^14",false,"^18",4,"^15",["^[",[["^R","^1T","^5H"],["^R","^1T",["^ ","^5E","^8K","^5B","^8L","^43",["^5I","^8M","^5F","^59","^5G","^5C","^5;","^8N","^8O","^5>","^8P"],"^8Q",["^ ","^5;",20],"^4N","^5H"],"^1K"]]],"^Z",["^[",[["^R","^1T","^5H"],["^R","^1T",["^ ","^5E","^8K","^5B","^8L","^43",["^5I","^8M","^5F","^59","^5G","^5C","^5;","^8N","^8O","^5>","^8P"],"^8Q",["^ ","^5;",20],"^4N","^5H"],"^1K"]]],"^17",["^[",[null,null]]],"^15",["^[",[["^R","^1T","^5H"],["^R","^1T",["^ ","^5E","^8K","^5B","^8L","^43",["^5I","^8M","^5F","^59","^5G","^5C","^5;","^8N","^8O","^5>","^8P"],"^8Q",["^ ","^5;",20],"^4N","^5H"],"^1K"]]],"^16",null,"^1S",true,"^17",["^[",[null,null]],"^W",1,"^V",795,"^X",795,"^18",4,"^19",true,"^Z",["^[",[["^R","^1T","^5H"],["^R","^1T",["^ ","^5E","^8K","^5B","^8L","^43",["^5I","^8M","^5F","^59","^5G","^5C","^5;","^8N","^8O","^5>","^8P"],"^8Q",["^ ","^5;",20],"^4N","^5H"],"^1K"]]],"^12","Do not call this directly, use 'every', 'every-kv', 'coll-of' or 'map-of'"],"~$accept-nil?",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",1012,"^W",8,"^X",1012,"^Y",19,"^25",true,"^Z",["^[",["^10",["^[",[["~$p"]]]]]],"^25",true,"^B","~$cljs.spec.alpha/accept-nil?","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",19,"^15",["^[",[["~$p"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",1012,"^X",1012,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["~$p"]]]]]],"~$maybe-spec",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",105,"^W",8,"^X",105,"^Y",18,"^25",true,"^Z",["^[",["^10",["^[",[["^8E"]]]]],"^12","spec-or-k must be a spec, regex or resolvable kw/sym, else returns nil."],"^25",true,"^B","~$cljs.spec.alpha/maybe-spec","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",18,"^15",["^[",[["^8E"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",105,"^X",105,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["^8E"]]]]],"^12","spec-or-k must be a spec, regex or resolvable kw/sym, else returns nil."],"~$spec-impl",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",462,"^W",19,"^X",462,"^Y",28,"^1S",true,"^Z",["^[",["^10",["^[",[["^R","^1T","^1K","^6B"],["^R","^1T","^1K","^6B","^6C"]]]]],"^12","Do not call this directly, use 'spec'","^2[",["^ ","^14",false,"^18",5,"^15",["^[",[["^R","^1T","^1K","^6B"],["^R","^1T","^1K","^6B","^6C"]]],"^Z",["^[",[["^R","^1T","^1K","^6B"],["^R","^1T","^1K","^6B","^6C"]]],"^17",["^[",[null,null]]]],"^B","~$cljs.spec.alpha/spec-impl","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",28,"^2[",["^ ","^14",false,"^18",5,"^15",["^[",[["^R","^1T","^1K","^6B"],["^R","^1T","^1K","^6B","^6C"]]],"^Z",["^[",[["^R","^1T","^1K","^6B"],["^R","^1T","^1K","^6B","^6C"]]],"^17",["^[",[null,null]]],"^15",["^[",[["^R","^1T","^1K","^6B"],["^R","^1T","^1K","^6B","^6C"]]],"^16",null,"^1S",true,"^17",["^[",[null,null]],"^W",1,"^V",462,"^X",462,"^18",5,"^19",true,"^Z",["^[",[["^R","^1T","^1K","^6B"],["^R","^1T","^1K","^6B","^6C"]]],"^12","Do not call this directly, use 'spec'"],"~$invalid?",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",144,"^W",7,"^X",144,"^Y",15,"^Z",["^[",["^10",["^[",[["~$ret"]]]]],"^12","tests the validity of a conform return value"],"^B","~$cljs.spec.alpha/invalid?","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",15,"^15",["^[",[["^8Z"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",144,"^X",144,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["^8Z"]]]]],"^12","tests the validity of a conform return value"],"~$amp-impl",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",967,"^W",19,"^X",967,"^Y",27,"^1S",true,"^Z",["^[",["^10",["^[",[["^39","^3<","^4L"]]]]],"^12","Do not call this directly, use '&'"],"^B","~$cljs.spec.alpha/amp-impl","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",27,"^15",["^[",[["^39","^3<","^4L"]]],"^16",null,"^1S",true,"^17",["^[",[null,null]],"^W",1,"^V",967,"^X",967,"^18",3,"^19",true,"^Z",["^[",["^10",["^[",[["^39","^3<","^4L"]]]]],"^12","Do not call this directly, use '&'"],"~$pcat*",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",934,"^W",8,"^X",934,"^Y",13,"^25",true,"^Z",["^[",["^10",["^[",[[["~#cmap",[["^3R","~$&","~$pr","^4N","^2T"],"~:ps",["~$k1","~$&","~$kr","^4N","^2S"],"~:ks",["~$f1","~$&","~$fr","^4N","^2U"],"~:forms","^8Z","~:ret","~$rep+","~:rep+"]]]]]]]],"^25",true,"^B","~$cljs.spec.alpha/pcat*","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",13,"^15",["^[",[["~$p__48971"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",934,"^X",934,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[[["^93",[["^3R","~$&","^94","^4N","^2T"],"^95",["^96","~$&","^97","^4N","^2S"],"^98",["^99","~$&","^9:","^4N","^2U"],"^9;","^8Z","^9<","^9=","^9>"]]]]]]]],"~$alt*",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",981,"^W",8,"^X",981,"^Y",12,"^25",true,"^Z",["^[",["^10",["^[",[["^2T","^2S","^2U"]]]]]],"^25",true,"^B","~$cljs.spec.alpha/alt*","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",12,"^15",["^[",[["^2T","^2S","^2U"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",981,"^X",981,"^18",3,"^19",true,"^Z",["^[",["^10",["^[",[["^2T","^2S","^2U"]]]]]],"~$cat-impl",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",946,"^W",19,"^X",946,"^Y",27,"^1S",true,"^Z",["^[",["^10",["^[",[["^2S","^2T","^2U"]]]]],"^12","Do not call this directly, use 'cat'"],"^B","~$cljs.spec.alpha/cat-impl","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",27,"^15",["^[",[["^2S","^2T","^2U"]]],"^16",null,"^1S",true,"^17",["^[",[null,null]],"^W",1,"^V",946,"^X",946,"^18",3,"^19",true,"^Z",["^[",["^10",["^[",[["^2S","^2T","^2U"]]]]],"^12","Do not call this directly, use 'cat'"],"~$macroexpand-check",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",322,"^W",8,"^X",322,"^Y",25,"^25",true,"^Z",["^[",["^10",["^[",[["~$v","~$args"]]]]]],"^25",true,"^B","~$cljs.spec.alpha/macroexpand-check","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",25,"^15",["^[",[["~$v","^9F"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",322,"^X",322,"^18",2,"^19",true,"^Z",["^[",["^10",["^[",[["~$v","^9F"]]]]]],"~$reg-resolve",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",55,"^W",8,"^X",55,"^Y",19,"^25",true,"^Z",["^[",["^10",["^[",[["~$k"]]]]],"^12","returns the spec/regex at end of alias chain starting with k, nil if not found, k if k not ident"],"^25",true,"^B","~$cljs.spec.alpha/reg-resolve","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",19,"^15",["^[",[["~$k"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",55,"^X",55,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["~$k"]]]]],"^12","returns the spec/regex at end of alias chain starting with k, nil if not found, k if k not ident"],"~$explain-str",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",262,"^W",7,"^X",262,"^Y",18,"^Z",["^[",["^10",["^[",[["^11","~$x"]]]]],"^12","Given a spec and a value that fails to conform, returns an explanation as a string."],"^B","~$cljs.spec.alpha/explain-str","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",18,"^15",["^[",[["^11","~$x"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",262,"^X",262,"^18",2,"^19",true,"^Z",["^[",["^10",["^[",[["^11","~$x"]]]]],"^12","Given a spec and a value that fails to conform, returns an explanation as a string."],"~$t_cljs$spec$alpha48893",["^ ","^1;",6,"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^B","^2E","^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^1B",true,"^1C",true,"^W",5,"^V",734,"^1D",false,"^1E",["^;",["^1>","^1@"]]],"~$*compile-asserts*",["^ ","^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",1427,"^W",3,"^X",1427,"^Y",20,"^1W",true,"^12","If true, compiler will enable spec asserts, which are then\nsubject to runtime control via check-asserts? If false, compiler\nwill eliminate all spec assert overhead. See 'assert'.\nInitially set to the negation of the ':elide-asserts' compiler option.\nDefaults to true."],"^B","~$cljs.spec.alpha/*compile-asserts*","^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",20,"^W",1,"^1W",true,"^V",1420,"^X",1427,"^1Y","^37","^12","If true, compiler will enable spec asserts, which are then\nsubject to runtime control via check-asserts? If false, compiler\nwill eliminate all spec assert overhead. See 'assert'.\nInitially set to the negation of the ':elide-asserts' compiler option.\nDefaults to true."],"~$with-gen",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",192,"^W",7,"^X",192,"^Y",15,"^Z",["^[",["^10",["^[",[["^11","~$gen-fn"]]]]],"^12","Takes a spec and a no-arg, generator-returning fn and returns a version of that spec that uses that generator"],"^B","~$cljs.spec.alpha/with-gen","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",15,"^15",["^[",[["^11","^9P"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",192,"^X",192,"^18",2,"^19",true,"^Z",["^[",["^10",["^[",[["^11","^9P"]]]]],"^12","Takes a spec and a no-arg, generator-returning fn and returns a version of that spec that uses that generator"],"^5X",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",40,"^W",4,"^X",40,"^Y",12,"^4?","^1=","^12",null,"^Z",["^[",["^10",["^[",[["^11","~$x"]]]]]],"^4?","^1=","^B","~$cljs.spec.alpha/conform*","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",12,"^15",["^[",[["^11","~$x"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",39,"^X",40,"^18",2,"^19",true,"^Z",["^[",["^10",["^[",[["^11","~$x"]]]]],"^12",null],"~$check-asserts?",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",1435,"^W",16,"^X",1435,"^Y",30,"^1Y","^37","^Z",["^[",["^10",["^[",[[]]]]],"^12","Returns the value set by check-asserts."],"^B","~$cljs.spec.alpha/check-asserts?","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",30,"^15",["^[",[[]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",1435,"~:ret-tag","^37","^X",1435,"^18",0,"^1Y","^37","^19",true,"^Z",["^[",["^10",["^[",[[]]]]],"^12","Returns the value set by check-asserts."],"~$t_cljs$spec$alpha49100",["^ ","^1;",9,"^1<",["^;",["^1=","^1>","^1?","^1@","^67"]],"^B","^2G","^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^1B",true,"^1C",true,"^W",5,"^V",1296,"^1D",false,"^1E",["^;",["^1>","^1@","^67"]]],"~$t_cljs$spec$alpha49117",["^ ","^1;",2,"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^B","^2F","^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^1B",true,"^1C",true,"^W",5,"^V",1344,"^1D",false,"^1E",["^;",["^1>","^1@"]]],"~$noret?",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",1004,"^W",8,"^X",1004,"^Y",14,"^25",true,"^Z",["^[",["^10",["^[",[["^3R","~$pret"]]]]]],"^25",true,"^B","~$cljs.spec.alpha/noret?","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",14,"^15",["^[",[["^3R","^9Y"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",1004,"^X",1004,"^18",2,"^19",true,"^Z",["^[",["^10",["^[",[["^3R","^9Y"]]]]]],"~$rep-impl",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",958,"^W",19,"^X",958,"^Y",27,"^1S",true,"^Z",["^[",["^10",["^[",[["^R","~$p"]]]]],"^12","Do not call this directly, use '*'"],"^B","~$cljs.spec.alpha/rep-impl","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",27,"^15",["^[",[["^R","~$p"]]],"^16",null,"^1S",true,"^17",["^[",[null,null]],"^W",1,"^V",958,"^X",958,"^18",2,"^19",true,"^Z",["^[",["^10",["^[",[["^R","~$p"]]]]],"^12","Do not call this directly, use '*'"],"~$op-describe",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",1096,"^W",8,"^X",1096,"^Y",19,"^25",true,"^Z",["^[",["^10",["^[",[["~$p"]]]]]],"^25",true,"^B","~$cljs.spec.alpha/op-describe","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",19,"^15",["^[",[["~$p"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",1096,"^X",1096,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["~$p"]]]]]],"~$describe",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",187,"^W",7,"^X",187,"^Y",15,"^Z",["^[",["^10",["^[",[["^11"]]]]],"^12","returns an abbreviated description of the spec as data"],"^B","~$cljs.spec.alpha/describe","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",15,"^15",["^[",[["^11"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",187,"^X",187,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["^11"]]]]],"^12","returns an abbreviated description of the spec as data"],"~$explain-1",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",372,"^W",8,"^X",372,"^Y",17,"^25",true,"^Z",["^[",["^10",["^[",[["^R","^1T","^26","^27","^28","~$v"]]]]]],"^25",true,"^B","~$cljs.spec.alpha/explain-1","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",17,"^15",["^[",[["^R","^1T","^26","^27","^28","~$v"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",372,"^X",372,"^18",6,"^19",true,"^Z",["^[",["^10",["^[",[["^R","^1T","^26","^27","^28","~$v"]]]]]],"~$explain-out",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",251,"^W",7,"^X",251,"^Y",18,"^Z",["^[",["^10",["^[",[["^22"]]]]],"^12","Prints explanation data (per 'explain-data') to *out* using the printer in *explain-out*,\n    by default explain-printer."],"^B","~$cljs.spec.alpha/explain-out","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",18,"^15",["^[",[["^22"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",251,"^X",251,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["^22"]]]]],"^12","Prints explanation data (per 'explain-data') to *out* using the printer in *explain-out*,\n    by default explain-printer."],"~$re-gen",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",1167,"^W",8,"^X",1167,"^Y",14,"^25",true,"^Z",["^[",["^10",["^[",[["~$p","^60","^26","^4<","~$f"]]]]]],"^25",true,"^B","~$cljs.spec.alpha/re-gen","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",14,"^15",["^[",[["~$p","^60","^26","^4<","~$f"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",1167,"^X",1167,"^18",5,"^19",true,"^Z",["^[",["^10",["^[",[["~$p","^60","^26","^4<","~$f"]]]]]],"~$filter-alt",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",972,"^W",8,"^X",972,"^Y",18,"^25",true,"^Z",["^[",["^10",["^[",[["^2T","^2S","^2U","~$f"]]]]]],"^25",true,"^B","~$cljs.spec.alpha/filter-alt","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",18,"^15",["^[",[["^2T","^2S","^2U","~$f"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",972,"^X",972,"^18",4,"^19",true,"^Z",["^[",["^10",["^[",[["^2T","^2S","^2U","~$f"]]]]]],"~$t_cljs$spec$alpha48825",["^ ","^1;",6,"^1<",["^;",["^1=","^1>","^1?","^1@"]],"^B","^2M","^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^1B",true,"^1C",true,"^W",6,"^V",551,"^1D",false,"^1E",["^;",["^1>","^1@"]]],"~$and-preds",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",680,"^W",8,"^X",680,"^Y",17,"^25",true,"^Z",["^[",["^10",["^[",[["~$x","^3<","^2U"]]]]]],"^25",true,"^B","~$cljs.spec.alpha/and-preds","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",17,"^15",["^[",[["~$x","^3<","^2U"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",680,"^X",680,"^18",3,"^19",true,"^Z",["^[",["^10",["^[",[["~$x","^3<","^2U"]]]]]],"~$call-valid?",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",1271,"^W",8,"^X",1271,"^Y",19,"^25",true,"^Z",["^[",["^10",["^[",[["~$f","^6>","^9F"]]]]]],"^25",true,"^B","~$cljs.spec.alpha/call-valid?","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",19,"^15",["^[",[["~$f","^6>","^9F"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",1271,"^X",1271,"^18",3,"^19",true,"^Z",["^[",["^10",["^[",[["~$f","^6>","^9F"]]]]]],"~$op-unform",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",1042,"^W",8,"^X",1042,"^Y",17,"^25",true,"^Z",["^[",["^10",["^[",[["~$p","~$x"]]]]]],"^25",true,"^B","~$cljs.spec.alpha/op-unform","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",17,"^15",["^[",[["~$p","~$x"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",1042,"^X",1042,"^18",2,"^19",true,"^Z",["^[",["^10",["^[",[["~$p","~$x"]]]]]],"~$rep*",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",951,"^W",8,"^X",951,"^Y",12,"^25",true,"^Z",["^[",["^10",["^[",[["^3R","^3S","^8Z","~$splice","^R"]]]]]],"^25",true,"^B","~$cljs.spec.alpha/rep*","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",12,"^15",["^[",[["^3R","^3S","^8Z","^:E","^R"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",951,"^X",951,"^18",5,"^19",true,"^Z",["^[",["^10",["^[",[["^3R","^3S","^8Z","^:E","^R"]]]]]],"^2@",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",124,"^W",4,"^X",124,"^Y",12,"^4?","^1?","^12",null,"^Z",["^[",["^10",["^[",[["~$_"],["~$_","^R"]]]]],"^2[",["^ ","^14",false,"^18",2,"^15",["^[",[["~$_"],["~$_","^R"]]],"^Z",["^[",[["~$_"],["~$_","^R"]]],"^17",["^[",[null,null]]]],"^4?","^1?","^B","~$cljs.spec.alpha/specize*","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",12,"^2[",["^ ","^14",false,"^18",2,"^15",["^[",[["~$_"],["~$_","^R"]]],"^Z",["^[",[["~$_"],["~$_","^R"]]],"^17",["^[",[null,null]]],"^15",["^[",[["~$_"],["~$_","^R"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",123,"^X",124,"^18",2,"^19",true,"^Z",["^[",[["~$_"],["~$_","^R"]]],"^12",null],"~$maybe-impl",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",1000,"^W",19,"^X",1000,"^Y",29,"^1S",true,"^Z",["^[",["^10",["^[",[["~$p","^R"]]]]],"^12","Do not call this directly, use '?'"],"^B","~$cljs.spec.alpha/maybe-impl","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",29,"^15",["^[",[["~$p","^R"]]],"^16",null,"^1S",true,"^17",["^[",[null,null]],"^W",1,"^V",1000,"^X",1000,"^18",2,"^19",true,"^Z",["^[",["^10",["^[",[["~$p","^R"]]]]],"^12","Do not call this directly, use '?'"],"~$pcat",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",944,"^W",8,"^X",944,"^Y",12,"^25",true,"^Z",["^[",["^10",["^[",[["~$&","^2T"]]]]],"^2[",["^ ","^14",true,"^18",0,"^15",[["^[",["^2T"]]],"^Z",["^[",[["~$&","^2T"]]],"^17",["^[",[null]]]],"^25",true,"^B","~$cljs.spec.alpha/pcat","^14",true,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",12,"^2[",["^ ","^14",true,"^18",0,"^15",[["^[",["^2T"]]],"^Z",["^[",[["~$&","^2T"]]],"^17",["^[",[null]]],"^15",[["^[",["^2T"]]],"^16",null,"^17",["^[",[null]],"^W",1,"^V",944,"^X",944,"^18",0,"^19",true,"^Z",["^[",[["~$&","^2T"]]]],"^5Z",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",42,"^W",4,"^X",42,"^Y",12,"^4?","^1=","^12",null,"^Z",["^[",["^10",["^[",[["^11","^26","^27","^28","~$x"]]]]]],"^4?","^1=","^B","~$cljs.spec.alpha/explain*","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",12,"^15",["^[",[["^11","^26","^27","^28","~$x"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",39,"^X",42,"^18",5,"^19",true,"^Z",["^[",["^10",["^[",[["^11","^26","^27","^28","~$x"]]]]],"^12",null],"~$validate-fn",["^ ","^S",null,"^T",["^ ","^U","/home/thawes/src/projects/ExercisesForProgrammers/clojure/introduction/tip-calculator/.cljs_rhino_repl/cljs/spec/alpha.cljs","^V",1282,"^W",8,"^X",1282,"^Y",19,"^25",true,"^Z",["^[",["^10",["^[",[["~$f","^6>","~$iters"]]]]],"^12","returns f if valid, else smallest"],"^25",true,"^B","~$cljs.spec.alpha/validate-fn","^14",false,"^U",".cljs_rhino_repl/cljs/spec/alpha.cljs","^Y",19,"^15",["^[",[["~$f","^6>","^:N"]]],"^16",null,"^17",["^[",[null,null]],"^W",1,"^V",1282,"^X",1282,"^18",3,"^19",true,"^Z",["^[",["^10",["^[",[["~$f","^6>","^:N"]]]]],"^12","returns f if valid, else smallest"]],"~:cljs.spec/registry-ref",[["~:cljs.spec.alpha/kvs->map",["^[",["~$cljs.spec.alpha/conformer",["^[",["~$fn*",["~$p1__49111#"],["^[",["~$cljs.core/zipmap",["^[",["~$cljs.core/map","~:cljs.spec.alpha/k","^:T"]],["^[",["^:V","~:cljs.spec.alpha/v","^:T"]]]]]],["^[",["^:S",["~$p1__49112#"],["^[",["^:V",["^[",["~$cljs.core/fn",[["~$k","~$v"]],["^ ","^:W","~$k","^:X","~$v"]]],"^:Y"]]]]]]]],"~:require-macros",["^ ","~$c","^F","^F","^F","~$s","^C","^C","^C","^K","^L","^L","^L"],"~:cljs.analyzer/constants",["^ ","~:seen",["^;",["^R","^1O","^59","~:args","^4Q","~:cljs.spec.alpha/failure","~$cljs.spec.alpha/*","~:max-tries","~:path","~:req-un","~:opt-un","^6D","^6C","~$cljs.spec.alpha/+","~:p2","^9<","~:cljs.spec.alpha/unknown","~:cljs.spec.alpha/value","~:gfn","~:cljs.spec.alpha/recursion-limit","~:cljs.spec.alpha/name","^86","~:pred-exprs","^8K","~:keys-pred","~$vector?","~:gen-max","^6S","~:shrunk","~:fn","~$cljs.spec.alpha/alt","^1M","^9>","~$cljs.core/=","~:opt-keys","^69","^8;","~:cljs.spec.alpha/rep","~:pred","^1N","~:splice","^5:","^2U","^4M","~:cljs.spec.alpha/accept","^68","^8<","~:else","^7Z","^98","~$cljs.core/count","~$cljs.spec.alpha/and","^4C","^4D","~$cljs.spec.alpha/cat","~:_","^8M","~:maybe","~:via","~$cljs.spec.alpha/every","~:req-specs","~$cljs.spec.alpha/or","^1K","~:cljs.spec.alpha/gfn","^5;","^6<","~$v","~$map?","~:cljs.spec.alpha/spec","^4F","~:conform-keys","^4E","^6B","~$cljs.spec.alpha/fspec","^4O","~$fn","~:val","^6=","^44","~$cljs.spec.alpha/nilable","^4G","^:X","^5<","~$cljs.spec.alpha/tuple","^1T","^6P","^8O","~:p1","^:U","~:cljs.spec.alpha/problems","^5=","~$%","^5M","^:V","^:Q","~$method","~:distinct","^4H","~$cljs.spec.alpha/keys","^39","^5>","^6N","~:reason","~$cljs.spec.alpha/merge","~:cljs.spec.alpha/invalid","^3<","^5?","~:req","^5@","^5A","~$nil?","^8>","~:assertion-failed","^:T","^:S","~$cljs.core/<=","^6L","~:cljs.spec.alpha/amp","~:id","^5B","~:min-count","~:kind","~:smallest","~:count","^6H","^1I","~:req-keys","^1J","~$k","^:W","^:Z","^5C","^1P","^6?","^6:","~:opt-specs","^71","^7;","~:cljs.spec.alpha/args","^6;","~$ifn?","~:pred-forms","^4I","^11","^?","~$distinct?","~:max-count","^5D","^8N","~:max-elements","^5E","~$cljs.spec.alpha/multi-spec","~$cljs.core/coll?","^1L","^:Y","~:num-elements","^6I","^6>","^5F","^4J","~$apply","^5G","^5H","^5I","^6O","~:min-elements","^4K","^5J","^8P","~:cljs.spec.alpha/alt","^5K","^9;","~:cljs.spec.alpha/pred","~:cljs.spec.alpha/nil","^95","^8=","^:R","~:in","^8L","^5L","~:accept","~$cljs.spec.alpha/&","~:opt","~:cljs.spec.alpha/pcat","^4L","~$cljs.spec.alpha/?"]],"~:order",["^44","^;?","^;;","^<:","^;[","~~:_","^<Z","^;F","^<V","^39","^7Z","^;E","^<C","^;D","^<P","^<H","^;Z","^68","^69","^6:","^6;","^6<","^6=","^6?","^:Q","^:R","^:S","^:T","^:U","^:V","^:W","^:X","^:Y","^:Z","~$k","~$v","^6L","^86","^<S","^<<","^<1","^71","^;3","^<="]],"^12",null]